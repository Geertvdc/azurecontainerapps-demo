name: Build Frontend
on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
    paths:
      - 'frontend/**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  set-env:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed') || github.event_name == 'repository_dispatch' || github.event_name == 'workflow_dispatch'
    name: Set Environment Variables
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.main.outputs.version }}
      created: ${{ steps.main.outputs.created }}
      repository: ${{ steps.main.outputs.repository }}
    steps:
      - id: main
        run: |
          echo ::set-output name=version::$(echo ${GITHUB_SHA::7})
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          echo ::set-output name=repository::$GITHUB_REPOSITORY
  build-container:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed') || github.event_name == 'repository_dispatch' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    needs: set-env
    permissions:
      contents: read
      packages: write
    outputs:
      containerImage-frontend: ${{ steps.image-tag.outputs.image-frontend }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN}}
      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ needs.set-env.outputs.repository }}/frontend
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=ref,event=branch
            type=sha
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          file: "frontend/Dockerfile"
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Output image tag
        id: image-tag
        run: |
          echo ::set-output name=image-frontend::${{ env.REGISTRY }}/$GITHUB_REPOSITORY/frontend:sha-${{ needs.set-env.outputs.version }} | tr '[:upper:]' '[:lower:]'
  deploy:
    runs-on: ubuntu-latest
    needs: 
     - build-container
     - set-env
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_SP }}
      - name: Deploy revision
        id: deploy
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp update \
              --resource-group globo-tickets \
              --name frontend \
              --image ${{ needs.build-container.outputs.containerImage-frontend }} \
              --revision-suffix ${{ needs.set-env.outputs.version }} \
              --output tsv
              --query properties.latestRevisionFqdn
            FQDN=$(az containerapp revision show \
              --resource-group globo-tickets \
              --name frontend \
              --revision frontend--${{ needs.set-env.outputs.version }} \
              --query "properties.fqdn" \
              --output tsv)
            echo "FQDN=$FQDN" >> $GITHUB_ENV
      - uses: mshick/add-pr-comment@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          message: |
            New app revision created at: [${{ env.FQDN}}](${{ env.FQDN}})
  close-pr:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_SP }}
      - name: Deploy revision
        id: deploy
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            OLDREVISION=$( az containerapp revision list  --output tsv --query "[?properties.trafficWeight==\`100\`].name | [0]")
            az containerapp ingress traffic set -n frontend -g globo-tickets --revision-weight latest=100
            az containerapp revision deactivate -g globo-tickets --revision $OLDREVISION
